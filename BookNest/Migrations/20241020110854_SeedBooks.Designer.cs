// <auto-generated />
using System;
using BookNest.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookNest.Migrations
{
    [DbContext(typeof(LibraryContext))]
    [Migration("20241020110854_SeedBooks")]
    partial class SeedBooks
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BookNest.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BookId"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CopiesAvailable")
                        .HasColumnType("int");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalCopies")
                        .HasColumnType("int");

                    b.Property<int>("YearPublished")
                        .HasColumnType("int");

                    b.HasKey("BookId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            Author = "Harper Lee",
                            CopiesAvailable = 7,
                            ISBN = "9780060935467",
                            Title = "To Kill a Mockingbird",
                            TotalCopies = 10,
                            YearPublished = 1960
                        },
                        new
                        {
                            BookId = 2,
                            Author = "George Orwell",
                            CopiesAvailable = 5,
                            ISBN = "9780451524935",
                            Title = "1984",
                            TotalCopies = 8,
                            YearPublished = 1949
                        },
                        new
                        {
                            BookId = 3,
                            Author = "F. Scott Fitzgerald",
                            CopiesAvailable = 3,
                            ISBN = "9780743273565",
                            Title = "The Great Gatsby",
                            TotalCopies = 6,
                            YearPublished = 1925
                        },
                        new
                        {
                            BookId = 4,
                            Author = "J.D. Salinger",
                            CopiesAvailable = 8,
                            ISBN = "9780316769488",
                            Title = "The Catcher in the Rye",
                            TotalCopies = 12,
                            YearPublished = 1951
                        },
                        new
                        {
                            BookId = 5,
                            Author = "Jane Austen",
                            CopiesAvailable = 6,
                            ISBN = "9780141439518",
                            Title = "Pride and Prejudice",
                            TotalCopies = 9,
                            YearPublished = 1813
                        },
                        new
                        {
                            BookId = 6,
                            Author = "J.R.R. Tolkien",
                            CopiesAvailable = 3,
                            ISBN = "9780618640157",
                            Title = "The Lord of the Rings",
                            TotalCopies = 5,
                            YearPublished = 1954
                        },
                        new
                        {
                            BookId = 7,
                            Author = "J.K. Rowling",
                            CopiesAvailable = 15,
                            ISBN = "9780439708180",
                            Title = "Harry Potter and the Sorcerer's Stone",
                            TotalCopies = 20,
                            YearPublished = 1997
                        },
                        new
                        {
                            BookId = 8,
                            Author = "Herman Melville",
                            CopiesAvailable = 4,
                            ISBN = "9781503280786",
                            Title = "Moby-Dick",
                            TotalCopies = 7,
                            YearPublished = 1851
                        },
                        new
                        {
                            BookId = 9,
                            Author = "Leo Tolstoy",
                            CopiesAvailable = 2,
                            ISBN = "9780199232765",
                            Title = "War and Peace",
                            TotalCopies = 4,
                            YearPublished = 1869
                        },
                        new
                        {
                            BookId = 10,
                            Author = "Fyodor Dostoevsky",
                            CopiesAvailable = 3,
                            ISBN = "9780143107637",
                            Title = "Crime and Punishment",
                            TotalCopies = 6,
                            YearPublished = 1866
                        });
                });

            modelBuilder.Entity("BookNest.Models.BorrowRecord", b =>
                {
                    b.Property<int>("BorrowRecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BorrowRecordId"));

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateIssued")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateReturned")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("BorrowRecordId");

                    b.HasIndex("BookId");

                    b.HasIndex("UserId");

                    b.ToTable("BorrowRecords");
                });

            modelBuilder.Entity("BookNest.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BookNest.Models.BorrowRecord", b =>
                {
                    b.HasOne("BookNest.Models.Book", "Book")
                        .WithMany()
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookNest.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
